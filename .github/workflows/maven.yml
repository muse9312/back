# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
# 환경설정
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/back
  VERSION: ${{ github.sha }}
  NAME: back

jobs:
  # 빌드 Job
  build:

    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@v3
     - name: Set up JDK 11
       uses: actions/setup-java@v3
       with:
         java-version: '11'
         distribution: 'temurin'
         cache: maven
     - name: Build with Maven
       run: mvn -B package --file pom.xml

     - name: Login to Docker Hub
       uses: docker/login-action@v1
       with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      # docker build 수행
     - name: Set up docker buildx
       id: buildx
       uses: docker/setup-buildx-action@v1
      # gitaction cache 적용
     - name: Cache Maven package
       id: cache-maven
       uses: actions/cache@v2
       with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # GitHub 컨테이너 레지스트리에 로그인 후 빌드 & 푸시
    #  - name: Login to ghcr
    #    uses: docker/login-action@v1
    #    with:
    #       registry: ghcr.io
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.GHCR_TOKEN }}
    #  - name: Build and push
    #    id: docker_build
    #    uses: docker/build-push-action@v2
    #    with:
    #       builder: ${{ steps.buildx.outputs.name }}
    #       push: true
    #       tags: ${{ env.DOCKER_IMAGE }}:latest
  #   # 배포 Job
  # deploy:
  #   needs: build  # build 후에 실행되도록 정의
  #   name: Deploy
  #   runs-on: [ self-hosted, back ] # AWS ./configure에서 사용할 label명
  #   steps:
  #     - name: Login to ghcr
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GHCR_TOKEN }}
  #     - name: Docker run
  #       run: |
  #         docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi -f ${{ env.DOCKER_IMAGE }}:latest
  #         docker run -d -e -p 8080:8080 --name back --restart always ${{ env.DOCKER_IMAGE }}:latest






    #  - name: Build Docker Image
    #    run: docker build --tag ${{ env.NAME }} .
    #  - name: Upload to Registry
    #    uses: elgohr/Publish-Docker-Github-Action@master
    #    with:
    #      name: muse9312/(docker container name)
    #      username: ${{ secrets.DOCKER_USERNAME }}
    #      password: ${{ secrets.DOCKER_PASSWORD }}
       
